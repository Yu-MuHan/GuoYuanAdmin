<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.glut.component.dao.ReceiverAddressMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.glut.model.ReceiverAddress" >
    <id column="receiver_address_id" property="receiverAddressId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="receiver_name" property="receiverName" jdbcType="VARCHAR" />
    <result column="receiver_mobile" property="receiverMobile" jdbcType="CHAR" />
    <result column="receiver_state" property="receiverState" jdbcType="VARCHAR" />
    <result column="receiver_city" property="receiverCity" jdbcType="VARCHAR" />
    <result column="receiver_district" property="receiverDistrict" jdbcType="VARCHAR" />
    <result column="receiver_address" property="receiverAddress" jdbcType="VARCHAR" />
    <result column="receiver_postalcode" property="receiverPostalcode" jdbcType="CHAR" />
    <result column="is_default_address" property="isDefaultAddress" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    receiver_address_id, user_id, receiver_name, receiver_mobile, receiver_state, receiver_city, 
    receiver_district, receiver_address, receiver_postalcode, is_default_address
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.glut.model.ReceiverAddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from receiver_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from receiver_address
    where receiver_address_id = #{receiverAddressId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from receiver_address
    where receiver_address_id = #{receiverAddressId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.glut.model.ReceiverAddressExample" >
    delete from receiver_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.glut.model.ReceiverAddress" >
    insert into receiver_address (receiver_address_id, user_id, receiver_name, 
      receiver_mobile, receiver_state, receiver_city, 
      receiver_district, receiver_address, receiver_postalcode, 
      is_default_address)
    values (#{receiverAddressId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{receiverName,jdbcType=VARCHAR}, 
      #{receiverMobile,jdbcType=CHAR}, #{receiverState,jdbcType=VARCHAR}, #{receiverCity,jdbcType=VARCHAR}, 
      #{receiverDistrict,jdbcType=VARCHAR}, #{receiverAddress,jdbcType=VARCHAR}, #{receiverPostalcode,jdbcType=CHAR}, 
      #{isDefaultAddress,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.glut.model.ReceiverAddress" >
    insert into receiver_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="receiverAddressId != null" >
        receiver_address_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="receiverName != null" >
        receiver_name,
      </if>
      <if test="receiverMobile != null" >
        receiver_mobile,
      </if>
      <if test="receiverState != null" >
        receiver_state,
      </if>
      <if test="receiverCity != null" >
        receiver_city,
      </if>
      <if test="receiverDistrict != null" >
        receiver_district,
      </if>
      <if test="receiverAddress != null" >
        receiver_address,
      </if>
      <if test="receiverPostalcode != null" >
        receiver_postalcode,
      </if>
      <if test="isDefaultAddress != null" >
        is_default_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="receiverAddressId != null" >
        #{receiverAddressId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="receiverName != null" >
        #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null" >
        #{receiverMobile,jdbcType=CHAR},
      </if>
      <if test="receiverState != null" >
        #{receiverState,jdbcType=VARCHAR},
      </if>
      <if test="receiverCity != null" >
        #{receiverCity,jdbcType=VARCHAR},
      </if>
      <if test="receiverDistrict != null" >
        #{receiverDistrict,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null" >
        #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverPostalcode != null" >
        #{receiverPostalcode,jdbcType=CHAR},
      </if>
      <if test="isDefaultAddress != null" >
        #{isDefaultAddress,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.glut.model.ReceiverAddressExample" resultType="java.lang.Integer" >
    select count(*) from receiver_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update receiver_address
    <set >
      <if test="record.receiverAddressId != null" >
        receiver_address_id = #{record.receiverAddressId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.receiverName != null" >
        receiver_name = #{record.receiverName,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverMobile != null" >
        receiver_mobile = #{record.receiverMobile,jdbcType=CHAR},
      </if>
      <if test="record.receiverState != null" >
        receiver_state = #{record.receiverState,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverCity != null" >
        receiver_city = #{record.receiverCity,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverDistrict != null" >
        receiver_district = #{record.receiverDistrict,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverAddress != null" >
        receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverPostalcode != null" >
        receiver_postalcode = #{record.receiverPostalcode,jdbcType=CHAR},
      </if>
      <if test="record.isDefaultAddress != null" >
        is_default_address = #{record.isDefaultAddress,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update receiver_address
    set receiver_address_id = #{record.receiverAddressId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      receiver_name = #{record.receiverName,jdbcType=VARCHAR},
      receiver_mobile = #{record.receiverMobile,jdbcType=CHAR},
      receiver_state = #{record.receiverState,jdbcType=VARCHAR},
      receiver_city = #{record.receiverCity,jdbcType=VARCHAR},
      receiver_district = #{record.receiverDistrict,jdbcType=VARCHAR},
      receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
      receiver_postalcode = #{record.receiverPostalcode,jdbcType=CHAR},
      is_default_address = #{record.isDefaultAddress,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.glut.model.ReceiverAddress" >
    update receiver_address
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="receiverName != null" >
        receiver_name = #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null" >
        receiver_mobile = #{receiverMobile,jdbcType=CHAR},
      </if>
      <if test="receiverState != null" >
        receiver_state = #{receiverState,jdbcType=VARCHAR},
      </if>
      <if test="receiverCity != null" >
        receiver_city = #{receiverCity,jdbcType=VARCHAR},
      </if>
      <if test="receiverDistrict != null" >
        receiver_district = #{receiverDistrict,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null" >
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverPostalcode != null" >
        receiver_postalcode = #{receiverPostalcode,jdbcType=CHAR},
      </if>
      <if test="isDefaultAddress != null" >
        is_default_address = #{isDefaultAddress,jdbcType=TINYINT},
      </if>
    </set>
    where receiver_address_id = #{receiverAddressId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.glut.model.ReceiverAddress" >
    update receiver_address
    set user_id = #{userId,jdbcType=INTEGER},
      receiver_name = #{receiverName,jdbcType=VARCHAR},
      receiver_mobile = #{receiverMobile,jdbcType=CHAR},
      receiver_state = #{receiverState,jdbcType=VARCHAR},
      receiver_city = #{receiverCity,jdbcType=VARCHAR},
      receiver_district = #{receiverDistrict,jdbcType=VARCHAR},
      receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      receiver_postalcode = #{receiverPostalcode,jdbcType=CHAR},
      is_default_address = #{isDefaultAddress,jdbcType=TINYINT}
    where receiver_address_id = #{receiverAddressId,jdbcType=INTEGER}
  </update>
</mapper>