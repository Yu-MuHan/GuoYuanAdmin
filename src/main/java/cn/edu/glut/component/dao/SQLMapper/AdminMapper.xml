<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.glut.component.dao.AdminMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.glut.model.Admin" >
    <id column="admin_id" property="adminId" jdbcType="CHAR" />
    <result column="account" property="account" jdbcType="CHAR" />
    <result column="pwd" property="pwd" jdbcType="CHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="identify" property="identify" jdbcType="CHAR" />
    <result column="phone_number" property="phoneNumber" jdbcType="CHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    admin_id, account, pwd, NAME, identify, phone_number, email, photo
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.glut.model.AdminExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from admin
    where admin_id = #{adminId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from admin
    where admin_id = #{adminId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.glut.model.AdminExample" >
    delete from admin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.glut.model.Admin" >
    insert into admin (admin_id, account, pwd, 
      NAME, identify, phone_number, 
      email, photo)
    values (#{adminId,jdbcType=CHAR}, #{account,jdbcType=CHAR}, #{pwd,jdbcType=CHAR}, 
      #{name,jdbcType=VARCHAR}, #{identify,jdbcType=CHAR}, #{phoneNumber,jdbcType=CHAR}, 
      #{email,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.glut.model.Admin" >
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="identify != null" >
        identify,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="photo != null" >
        photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        #{adminId,jdbcType=CHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=CHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="identify != null" >
        #{identify,jdbcType=CHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.glut.model.AdminExample" resultType="java.lang.Integer" >
    select count(*) from admin
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update admin
    <set >
      <if test="record.adminId != null" >
        admin_id = #{record.adminId,jdbcType=CHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=CHAR},
      </if>
      <if test="record.pwd != null" >
        pwd = #{record.pwd,jdbcType=CHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.identify != null" >
        identify = #{record.identify,jdbcType=CHAR},
      </if>
      <if test="record.phoneNumber != null" >
        phone_number = #{record.phoneNumber,jdbcType=CHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null" >
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update admin
    set admin_id = #{record.adminId,jdbcType=CHAR},
      account = #{record.account,jdbcType=CHAR},
      pwd = #{record.pwd,jdbcType=CHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      identify = #{record.identify,jdbcType=CHAR},
      phone_number = #{record.phoneNumber,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.glut.model.Admin" >
    update admin
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=CHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="identify != null" >
        identify = #{identify,jdbcType=CHAR},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.glut.model.Admin" >
    update admin
    set account = #{account,jdbcType=CHAR},
      pwd = #{pwd,jdbcType=CHAR},
      NAME = #{name,jdbcType=VARCHAR},
      identify = #{identify,jdbcType=CHAR},
      phone_number = #{phoneNumber,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR}
    where admin_id = #{adminId,jdbcType=CHAR}
  </update>
</mapper>